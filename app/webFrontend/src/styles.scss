@import '~dragula/dist/dragula.css';
@import 'variables';
// Plus imports for other components in your app.

// Custom global geli stuff
@import 'global-hacks';
@import 'breakpoints';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($app-theme);

* {
  box-sizing: border-box;
}

body, html {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  font-family: Roboto, "Helvetica Neue", sans-serif;
  font-size: $base_font_size;
  line-height: $line_height--base;
  background-color: lighten(map-get($app-primary, 'default'), 38.5%);

  @include bp(xl) {
    $factor: 1.2;
    font-size: $base_font_size * $factor;
    line-height: $line_height--base * $factor;
  }
  @include bp(4k) {
    $factor: 1.4;
    font-size: $base_font_size * $factor;
    line-height: $line_height--base * $factor;
  }
}

app-root {
  margin: 0 auto;
  background-color: #fff;
  box-shadow: 0 0 54px 5px rgba(0, 0, 0, 0.75);

  @include bp(xxl) {
    margin: 0 8%;
  }
  @include bp(4k) {
    margin: 0 14%;
  }
}

h1, h2, h3, h4, h5, h6 {
  line-height: $line_height--header;
}

.logo-font {
  font-family: Pacifico, cursive;
}

.avatar {
  border-radius: 50%;
}

.loading-container {
  position: absolute;
  top: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  background-color: map-get($app-primary, 'default');

  $offset: 187;
  $duration: 1.4s;

  @keyframes rotator {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(270deg);
    }
  }

  @keyframes dash {
    0% {
      stroke-dashoffset: $offset;
    }
    50% {
      stroke-dashoffset: $offset/4;
      transform: rotate(135deg);
    }
    100% {
      stroke-dashoffset: $offset;
      transform: rotate(450deg);
    }
  }

  .loading-spinner-path {
    stroke-dasharray: $offset;
    stroke-dashoffset: 0;
    transform-origin: center;
    stroke: map-get($app-accent, 'default');

    animation: dash $duration ease-in-out infinite;
  }

  .loading-spinner {
    animation: rotator $duration linear infinite;
  }
}


