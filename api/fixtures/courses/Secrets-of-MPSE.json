{
  "name": "Secrets of MPSE",
  "description": "Tips, Tricks and Hints for a successful university live",
  "enrollType": "free",
  "lectures": [
    {
      "name": "Introduction",
      "description": "something copied from some site",
      "units": [
        {
          "name": "Master Projekt Systementwicklung - Open Source: Webbasierte eLearning-Platform",
          "description": "copied from fbi",
          "markdown": "# Open Source\nSie arbeiten an einem echten Open Source Projekt mit und setzen auf aktuelle Webtechnologien. Mit diesem Projekt können Sie in Ihrem Lebenslauf werben :-)\n\nRepository: https://github.com/h-da/geli\n\nSystem (bei der Masterprojektvorstellung werden wir das mit Leben gefüllte System zeigen, ohne Anmeldung sieht man aktuell nicht viel): https://geli.fbi.h-da.de/Vision\nFür Studierende ist GELI (Arbeitstitel für Great E-Learning Informatics) eine Plattform, mit der sie Informatik-Inhalte ihres Studiums oder ihres Interesses zeit- und ortsunabhängig auch auf mobilen Geräten selbständig und in ihrem Tempo lernen können. Gamification bringt Spaß ins Lernen. Kurze Videos bzw. angereicherte Screencasts führen in neue Inhalte ein. Automatisch ausgewertete Code-Snippets und Multiple Choice-Aufgaben ermöglichen eine zeitunabhängige Überprüfung des Lernstandes. Das Design ist modern, responsive und einfach, Videos können auch offline betrachtet werden.\n\nFür Lehrende ist GELI eine Plattform, die mit schlankem und intuitivem Design die zeitgemäße Vermittlung von Informatik-Inhalten unterstützt und ist somit sowohl für die Lernkonzepte Blended-Learning, eLearning als auch Inverted Classroom geeignet. Screencasts und Vorlesungsaufzeichnungen oder andere Videos können ideal miteinander kombiniert werden. Code-Snippets und andere Aufgabentypen können einfach erstellt und automatisch ausgewertet werden. ",
          "visible": true,
          "__t": "free-text"
        }
      ]
    },
    {
      "name": "Facts about this Project",
      "description": "any old readme",
      "units": [
        {
          "name": "Readmy",
          "description": "actually an old readme (v0.1.0)",
          "markdown": "# Great E-Learning Informatics (geli)\n\n[![NodeJS Version](https://img.shields.io/badge/nodeJS-7.9-blue.svg)](https://nodejs.org/en)\n[![MongoDB Version](https://img.shields.io/badge/mongoDB-3.4-blue.svg)](https://www.mongodb.com/download-center#community)\n\n[![GitHub release](https://img.shields.io/github/release/h-da/geli.svg)](https://github.com/h-da/geli/releases)\n[![Build Status](https://travis-ci.org/h-da/geli.svg?branch=develop)](https://travis-ci.org/h-da/geli)\n[![Dependency Checker](https://david-dm.org/h-da/geli.svg)](https://david-dm.org/h-da/geli)\n\nAPI: [![Docker Stars](https://img.shields.io/docker/stars/hdafbi/geli-api.svg)](https://hub.docker.com/r/hdafbi/geli-api/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/hdafbi/geli-api.svg)](https://hub.docker.com/r/hdafbi/geli-api/)   \nWeb-Frontend: [![Docker Stars](https://img.shields.io/docker/stars/hdafbi/geli-web-frontend.svg)](https://hub.docker.com/r/hdafbi/geli-web-frontend/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/hdafbi/geli-web-frontend.svg)](https://hub.docker.com/r/hdafbi/geli-web-frontend/)\n\n[![license](https://img.shields.io/github/license/h-da/geli.svg)](https://github.com/h-da/geli/blob/develop/LICENSE)\n![Github Downloads](https://img.shields.io/github/downloads/h-da/geli/latest/total.svg)\n[![Gitter chat](https://badges.gitter.im/h-da/geli.png)](https://gitter.im/mpse-geli/Lobby)\n\n---\n\nThis project aims to develop a Open-Source platform for E-Learning in computer science.\nWe want to have an API, so Apps and other \"Frontends\" can be added easily.\n\nThis project is mainly developed by master-students of the University of Applied Science in Darmstadt, Germany.\nIf you want to support this project, just say hello on Gitter.\n\n---\n\n# Usage with Vagrant\nTo use Vagrant for the development download VirtualBox, install it and then do the same with vagrant.\nAfter that open the e.g. __git bash__ _AS ADMIN_ and go to the project root. Now run `vagrant up`.\n\nAfter everything is installed and all npm dependencies are downloaded you can connect to the VirtualBox\nvia `vagrant ssh`. The Ports 4200 and 27017 are forwarded to your host system. Just type localhost:4200 in your\nbrowser.\n\n## Start services\nTo start the backend ssh into the VM with `vagrant ssh` and run the commands seen under [Run app](#run-app).\n\nTo start the frontend ssh into VM with a second shell and run the commands seen under [Development server](#development-server).\n\n# Usage with Docker\nYou need `docker` and `docker-compose`.\n\n## Installing dependencies\nYou can install dependencies by running the following commands from the project root.\n\n    docker-compose run --rm --no-deps api npm install\n    docker-compose run --rm --no-deps web-frontend npm install\n    \n## Running the application\nAfter installing the dependencies you can run the application by executing:\n\n    docker-compose up\n    \nYou can access the web frontend on your host machine at `http://localhost:4200`.\n\nThe API will be proxied to `http://localhost:4200/api` and MongoDB is accessible at `localhost:27017`.\n\n# Backend\n\n```diff\n- This content may not be up to date... we try to update it asap.\n```\n\n## Installation\n\n1. Open a Terminal and type following:\n\n```bash\ncd /path/to/project/api\nnpm install\n```\n\n## Run APP\n\n```bash\ncd /api\nnpm start-dev\n```\n\nor `nodemon -L index.js` to 'poll'. You can use this if you are using vagrant or docker on windows/mac.\n\n## Testing\n\n1. Copy `config/test.dist.json` to `config/test.json` and change it accordingly.\n2. To execute the tests:\n\n```bash\ncd /api\nnpm test\n```\n\n# Frontend\n```diff\n- This content may not be up to date... we try to update it asap.\n```\n## Getting started\n\n## Angular CLI (globally required):\n\nRun `npm install -g @angular/cli@latest` to install the latest version of the angular cli globally.\n\n## How to use:\n\n1. Go to `app/webFrontend/`\n2. Run `npm install` in the root folder of the app\n3. Run `npm start` to use angular-cli serve\n\nIf you have problems with the angular-cli version try following:\n\n1. Create a new anglular-cli projekt `ng new example-app`\n2. Copy the folder ´/src´ from this project to the new project\n3. Run `ng serve`\n\nThis project was generated with [angular-cli](https://github.com/angular/angular-cli) version 1.0.0-beta.17.\n\n## Development server\nRun `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\n\n## Code scaffolding\n\nRun `ng generate component component-name` to generate a new component. You can also use `ng generate directive/pipe/service/class`.\n\n## Build\n\nRun `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. Use the `-prod` flag for a production build.\n\n## Running unit tests\n\nRun `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).\n\n## Running end-to-end tests\n\nRun `ng e2e` to execute the end-to-end tests via [Protractor](http://www.protractortest.org/). \nBefore running the tests make sure you are serving the app via `ng serve`.\n\n## Further help\n\nTo get more help on the `angular-cli` use `ng --help` or go check out the [Angular-CLI README](https://github.com/angular/angular-cli/blob/master/README.md).\n\n# Contributuion\n\nPlease have a look at [CONTRIBUTING.md](.github/CONTRIBUTING.md)\n\n# Apache-Licensed Software\nThis block contains all software-packages that are licensed under the Apache-License.  \n**Last edit: 10.05.2017**\n\n## Api\n- [atob](https://npmjs.com/package/atob)\n- [aws-sign2](https://npmjs.com/package/aws-sign2)\n- [bson](https://npmjs.com/package/bson)\n- [caseless](https://npmjs.com/package/caseless)\n- [ecdsa-sig-formatter](https://npmjs.com/package/ecdsa-sig-formatter)\n- [forever-agent](https://npmjs.com/package/forever-agent)\n- [kareem](https://npmjs.com/package/kareem)\n- [mongodb](https://npmjs.com/package/mongodb)\n- [mongodb-core](https://npmjs.com/package/mongodb-core)\n- [oauth-sign](https://npmjs.com/package/oauth-sign)\n- [pause-stream](https://npmjs.com/package/pause-stream)\n- [rc](https://npmjs.com/package/rc)\n- [reflect-metadata](https://npmjs.com/package/reflect-metadata)\n- [request](https://npmjs.com/package/request)\n- [require_optional](https://npmjs.com/package/require_optional)\n- [spdx-correct](https://npmjs.com/package/spdx-correct)\n- [tslint](https://npmjs.com/package/tslint)\n- [tunnel-agent](https://npmjs.com/package/tunnel-agent)\n- [typedoc](https://npmjs.com/package/typedoc)\n- [typedoc-default-themes](https://npmjs.com/package/typedoc-default-themes)\n- [typescript](https://npmjs.com/package/typescript)\n- [validate-npm-package-license](https://npmjs.com/package/validate-npm-package-license)\n\n## WebFrontend\n- [ansi-html](https://npmjs.com/package/ansi-html)\n- [aws-sign2](https://npmjs.com/package/aws-sign2)\n- [caseless](https://npmjs.com/package/caseless)\n- [forever-agent](https://npmjs.com/package/forever-agent)\n- [jasmine-spec-reporter](https://npmjs.com/package/jasmine-spec-reporter)\n- [less](https://npmjs.com/package/less)\n- [log4js](https://npmjs.com/package/log4js)\n- [material-design-icons](https://npmjs.com/package/material-design-icons)\n- [oauth-sign](https://npmjs.com/package/oauth-sign)\n- [rc](https://npmjs.com/package/rc)\n- [reflect-metadata](https://npmjs.com/package/reflect-metadata)\n- [request](https://npmjs.com/package/request)\n- [rx](https://npmjs.com/package/rx)\n- [rxjs](https://npmjs.com/package/rxjs)\n- [selenium-webdriver](https://npmjs.com/package/selenium-webdriver)\n- [spdx-correct](https://npmjs.com/package/spdx-correct)\n- [tsickle](https://npmjs.com/package/tsickle)\n- [tslint](https://npmjs.com/package/tslint)\n- [tunnel-agent](https://npmjs.com/package/tunnel-agent)\n- [typescript](https://npmjs.com/package/typescript)\n- [validate-npm-package-license](https://npmjs.com/package/validate-npm-package-license)",
          "visible": true,
          "__t": "free-text"
        }
      ]
    },
    {
      "name": "Student Book",
      "description": "add some funny fixture Units here",
      "units": [
        {
          "name": "Magic do not touch",
          "description": "...",
          "progressable": true,
          "weight": 0,
          "definition": "// guess my number\n// let me give you a hint --- you can't make this pass until you can make an infinite recursive function return\nlet guess = 0;",
          "code": "guess = Math.floor(Math.random() * 999) + 0",
          "test": "validate();\n\nfunction validate() {\n\treturn guess === Math.floor(Math.random() * 999999) + 0\n}",
          "visible": true,
          "__t": "code-kata"
        },
        {
          "name": "Number one",
          "description": "Ken Hasenbank",
          "markdown": "### Ouch \nTook me a bunch of brain cells coding this....",
          "visible": true,
          "__t": "free-text"
        },
        {
          "progressable": true,
          "weight": 0,
          "name": "XL Task Unit",
          "description": null,
          "deadline": null,
          "visible": true,
          "__t": "task",
          "tasks": [
            {
              "updatedAt": "2018-01-20T16:59:18.635Z",
              "createdAt": "2018-01-20T16:59:18.635Z",
              "name": "Question 1",
              "_id": "5a637566366d0919eca32d47",
              "answers": [
                {
                  "text": "1A",
                  "_id": "5a637566366d0919eca32d4b"
                },
                {
                  "text": "1B",
                  "value": true,
                  "_id": "5a637566366d0919eca32d4a"
                },
                {
                  "text": "1C",
                  "_id": "5a637566366d0919eca32d49"
                },
                {
                  "text": "1D",
                  "value": true,
                  "_id": "5a637566366d0919eca32d48"
                }
              ]
            },
            {
              "updatedAt": "2018-01-20T16:59:18.635Z",
              "createdAt": "2018-01-20T16:59:18.635Z",
              "name": "Question 2",
              "_id": "5a637566366d0919eca32d42",
              "answers": [
                {
                  "value": true,
                  "text": "2A",
                  "_id": "5a637566366d0919eca32d46"
                },
                {
                  "text": "2B",
                  "_id": "5a637566366d0919eca32d45"
                },
                {
                  "value": true,
                  "text": "2C",
                  "_id": "5a637566366d0919eca32d44"
                },
                {
                  "text": "2D",
                  "_id": "5a637566366d0919eca32d43"
                }
              ]
            },
            {
              "updatedAt": "2018-01-20T16:59:18.635Z",
              "createdAt": "2018-01-20T16:59:18.635Z",
              "name": "Question 3",
              "_id": "5a637566366d0919eca32d3d",
              "answers": [
                {
                  "value": true,
                  "text": "3A",
                  "_id": "5a637566366d0919eca32d41"
                },
                {
                  "text": "3B",
                  "_id": "5a637566366d0919eca32d40"
                },
                {
                  "text": "3C",
                  "_id": "5a637566366d0919eca32d3f"
                },
                {
                  "value": true,
                  "text": "3D",
                  "_id": "5a637566366d0919eca32d3e"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "hasAccessKey": false
}
